# (shared by all profiles, individual profiles can override the following):

# PROFILE (DEV, QA, PROD)
spring.profiles.active=dev

# You can also include extra profiles with:
# spring.profiles.include=common,logging

app.name=MySpringAppWithDefaultConfig

spring.datasource.url=jdbc:mysql://0.0.0.0:3306/loan_management
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# standard spring boot redis configs
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.type=redis

# Spring Cache Configuration
spring.cache.redis.time-to-live=600000  # TTL for cache entries in milliseconds (10 minutes)
spring.cache.redis.cache-null-values=false  # Avoid caching null values
spring.cache.redis.use-key-prefix=true  # Use key prefix for cache entries
spring.cache.redis.key-prefix=cache:  # Prefix to use for cache keys

# Root logging level (default for all packages)
logging.level.root=INFO
# spring boot logging level
# logging.level.org.springframework=DEBUG

# Package-specific logging levels
#logging.level.com.example.service=DEBUG
#logging.level.com.example.repository=INFO
#logging.level.com.example.controller=ERROR

# Log file configuration
logging.file.name=app.log
logging.file.path=./logs
logging.file.max-size=100MB
logging.file.max-history=2

# Log pattern configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Enable JSON logging (requires additional Logback configuration)
logging.pattern.json=%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} [%thread] %-5level %logger{36} - %msg%n


# Spring Actuators related changes
management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true

# following url can be checked
# /actuator/metrics/cache.gets

# Kafka Bootstrap Servers (comma-separated list if you have multiple brokers)
spring.kafka.bootstrap-servers=localhost:9092

# Consumer configuration
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

